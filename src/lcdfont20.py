# Code generated by font_to_py.py.
# Font: lcd.ttf Char set:  .0123456789:
# Cmd: font_to_py.py -f -x .\fonts\lcd.ttf 20 lcdfont20.py -c  1234567890:.
version = "0.33"


def height():
    return 20


def baseline():
    return 20


def max_width():
    return 13


def hmap():
    return True


def reverse():
    return False


def monospaced():
    return True


def min_ch():
    return 32


def max_ch():
    return 63


_font = (
    b"\x0d\x00\x3f\xc0\x3f\xe0\x00\x70\x00\x60\x00\x60\x00\x60\x00\x60"
    b"\x00\x60\x00\x60\x03\xc0\x03\x80\x0c\x00\x0c\x00\x0c\x00\x0c\x00"
    b"\x1c\x00\x18\x00\x08\x00\x38\x00\x10\x00\x0d\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\xc0\x00\x0d\x00"
    b"\x0f\xf0\x1f\xf8\x30\x18\x30\x18\x30\x18\x30\x18\x30\x30\x70\x30"
    b"\x60\x30\x00\x00\x00\x00\x60\x30\x60\x30\x60\x60\x60\x60\xc0\x60"
    b"\xc0\x60\xc0\x60\xff\xc0\x7f\x80\x0d\x00\x00\x80\x01\x80\x03\x80"
    b"\x07\x80\x01\x80\x03\x80\x03\x80\x03\x80\x03\x00\x00\x00\x00\x00"
    b"\x03\x00\x07\x00\x07\x00\x07\x00\x07\x00\x07\x00\x06\x00\x06\x00"
    b"\x04\x00\x0d\x00\x0f\xf0\x1f\xf8\x30\x18\x10\x18\x00\x18\x00\x18"
    b"\x00\x18\x00\x38\x00\x30\x1f\xf0\x3f\xe0\x60\x00\x60\x00\x60\x00"
    b"\x60\x00\x60\x00\xe0\x00\xc0\x00\xbf\xc0\x7f\xc0\x0d\x00\x1f\xf0"
    b"\x1f\xf8\x00\x18\x00\x18\x00\x18\x00\x30\x00\x30\x00\x30\x00\x30"
    b"\x1f\xe0\x1f\xe0\x00\x30\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60"
    b"\x00\x60\xff\xc0\xff\x80\x0d\x00\x00\x08\x20\x18\x30\x18\x30\x18"
    b"\x30\x30\x70\x30\x60\x30\x60\x30\x60\x30\x3f\xe0\x3f\xe0\x00\x60"
    b"\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\xc0\x00\x40"
    b"\x0d\x00\x3f\xf8\x3f\xf0\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00"
    b"\x70\x00\x60\x00\x7f\xe0\x3f\xc0\x00\x30\x00\x30\x00\x60\x00\x60"
    b"\x00\x60\x00\x60\xc0\x60\xff\xc0\x7f\x80\x0d\x00\x0f\xf0\x1f\xf0"
    b"\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00\x70\x00\x60\x00\x5f\xe0"
    b"\x7f\xc0\x60\x30\x60\x30\x60\x60\xe0\x60\xc0\x60\xc0\x60\xc0\x60"
    b"\xff\xc0\x7f\x80\x0d\x00\x1f\xf0\x1f\xf0\x00\x20\x00\x20\x00\x60"
    b"\x00\xe0\x00\xc0\x01\x80\x01\x80\x01\x00\x06\x00\x0c\x00\x0c\x00"
    b"\x18\x00\x38\x00\x30\x00\x60\x00\xe0\x00\xc0\x00\xc0\x00\x0d\x00"
    b"\x0f\xf0\x1f\xf8\x30\x18\x30\x18\x30\x18\x30\x18\x30\x30\x70\x30"
    b"\x60\x30\x1f\xe0\x3f\xc0\x60\x30\x60\x30\x60\x60\x60\x60\xc0\x60"
    b"\xc0\x60\xc0\x60\xff\xc0\x7f\x80\x0d\x00\x1f\xe0\x3f\xf0\x60\x30"
    b"\x60\x30\x60\x30\x60\x30\x60\x30\x60\x60\xe0\x60\x7f\xe0\x3f\xe0"
    b"\x00\x60\x00\x60\x00\x60\x00\xc0\x00\xc0\x00\xc0\x00\xc0\xff\x80"
    b"\xff\x00\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x60\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x80\x00"
)

_index = (
    b"\x00\x00\x2a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x54\x00"
    b"\x00\x00\x7e\x00\xa8\x00\xd2\x00\xfc\x00\x26\x01\x50\x01\x7a\x01"
    b"\xa4\x01\xce\x01\xf8\x01\x22\x02\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x00\x00\x4c\x02"
)

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l: l[0] | (l[1] << 8)


def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 63 else 0
    doff = ifb(_mvi[ioff:])
    width = ifb(_mvfont[doff:])

    next_offs = doff + 2 + ((width - 1) // 8 + 1) * 20
    return _mvfont[doff + 2 : next_offs], 20, width
