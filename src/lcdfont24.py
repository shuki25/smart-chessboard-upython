# Code generated by font_to_py.py.
# Font: lcd.ttf Char set: 0123456789:
# Cmd: font_to_py.py -f -x .\fonts\lcd.ttf 24 lcd.py -c 1234567890:
version = '0.33'

def height():
    return 24

def baseline():
    return 24

def max_width():
    return 16

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 48

def max_ch():
    return 63

_font =\
b'\x10\x00\x1f\xf0\x3f\xf8\x00\x1c\x00\x18\x00\x18\x00\x18\x00\x18'\
b'\x00\x18\x00\x18\x00\x18\x00\x30\x03\xf0\x07\xc0\x06\x00\x0c\x00'\
b'\x0c\x00\x0c\x00\x0c\x00\x0c\x00\x0c\x00\x0c\x00\x00\x00\x18\x00'\
b'\x08\x00\x10\x00\x07\xfc\x07\xfc\x18\x03\x18\x07\x30\x06\x30\x06'\
b'\x30\x06\x30\x06\x30\x06\x30\x06\x30\x06\x20\x04\x20\x04\x60\x0c'\
b'\x60\x0c\x60\x0c\x60\x0c\x60\x0c\xe0\x18\xc0\x18\xc0\x18\xc0\x18'\
b'\x3f\xe0\x7f\xe0\x10\x00\x00\x20\x00\x60\x01\x60\x03\x60\x03\xe0'\
b'\x00\xe0\x00\xe0\x00\xe0\x00\xe0\x00\xc0\x00\xc0\x00\x80\x00\x80'\
b'\x01\xc0\x01\xc0\x01\xc0\x01\x80\x01\x80\x01\x80\x03\x80\x03\x80'\
b'\x03\x80\x03\x80\x01\x00\x10\x00\x07\xfe\x07\xfc\x18\x03\x18\x03'\
b'\x00\x03\x00\x07\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x1f\xfc'\
b'\x3f\xf8\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00'\
b'\xc0\x00\xc0\x00\xbf\xe0\x7f\xf0\x10\x00\x0f\xfc\x0f\xfe\x00\x07'\
b'\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x0c'\
b'\x0f\xfc\x0f\xf0\x00\x0c\x00\x0c\x00\x0c\x00\x0c\x00\x18\x00\x18'\
b'\x00\x18\x00\x18\x00\x18\x7f\xf0\xff\xe0\x10\x00\x00\x02\x10\x06'\
b'\x30\x06\x30\x06\x30\x06\x30\x06\x30\x0e\x60\x0c\x60\x0c\x60\x0c'\
b'\x60\x0c\x1f\xf0\x3f\xf8\x00\x0c\x00\x18\x00\x18\x00\x18\x00\x18'\
b'\x00\x18\x00\x18\x00\x18\x00\x30\x00\x30\x00\x10\x10\x00\x0f\xfe'\
b'\x17\xfc\x18\x00\x18\x00\x30\x00\x30\x00\x30\x00\x30\x00\x30\x00'\
b'\x30\x00\x30\x00\x7f\xf8\x1f\xfc\x00\x0c\x00\x0c\x00\x0c\x00\x0c'\
b'\x00\x0c\x00\x18\x00\x18\xc0\x18\xc0\x18\x3f\xe0\x7f\xe0\x10\x00'\
b'\x07\xfc\x07\xfc\x18\x00\x18\x00\x30\x00\x30\x00\x30\x00\x30\x00'\
b'\x30\x00\x30\x00\x30\x00\x7f\xf8\x7f\xfc\x60\x0c\x60\x0c\x60\x0c'\
b'\x60\x0c\x60\x0c\xe0\x18\xc0\x18\xc0\x18\xc0\x18\x3f\xe0\x7f\xe0'\
b'\x10\x00\x0f\xfe\x0f\xfc\x00\x04\x00\x0c\x00\x08\x00\x18\x00\x38'\
b'\x00\x30\x00\x70\x00\x60\x00\x40\x00\xc0\x01\x00\x03\x00\x07\x00'\
b'\x06\x00\x0c\x00\x1c\x00\x18\x00\x30\x00\x70\x00\x60\x00\xc0\x00'\
b'\xc0\x00\x10\x00\x07\xfc\x07\xfc\x18\x03\x18\x07\x30\x06\x30\x06'\
b'\x30\x06\x30\x06\x30\x06\x30\x06\x30\x06\x3f\xfc\x3f\xfc\x60\x0c'\
b'\x60\x0c\x60\x0c\x60\x0c\x60\x0c\xe0\x18\xc0\x18\xc0\x18\xc0\x18'\
b'\x3f\xe0\x7f\xe0\x10\x00\x0f\xf8\x0f\xfc\x30\x06\x30\x0c\x60\x0c'\
b'\x60\x0c\x60\x0c\x60\x0c\x60\x0c\x60\x0c\x60\x1c\x7f\xf8\x3f\xf8'\
b'\x00\x18\x00\x18\x00\x18\x00\x18\x00\x38\x00\x30\x00\x30\x00\x30'\
b'\x00\x30\x7f\xc0\xff\xc0\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x20\x00\x60\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\xc0\x00\x80\x00'

_index =\
b'\x00\x00\x32\x00\x64\x00\x96\x00\xc8\x00\xfa\x00\x2c\x01\x5e\x01'\
b'\x90\x01\xc2\x01\xf4\x01\x26\x02\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x58\x02'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 48 + 1) if oc >= 48 and oc <= 63 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 24
    return _mvfont[doff + 2:next_offs], 24, width
 
